* Space Complexity:
It is defined as the occupancy of space of code for execution.

Examples:
1)function func(arg1,arg2,N)
{
    let sum=0;
    sum=arg1+arg2;
    let arr=[.....__N]
}
Here, arg1,arg2, N are normal input arguments/variables, sum,arr are the extra variable that occupies some space.
sum occupy some constant space and arr occupies some space
Therfore space complexity=C1+C2N
apply Big O=O(C1+C2N)
           =O(N)

2)function func(M,N)
 {
    let sum=5
    let name="Opq Tech"
    let arr1=[]
    let arr2=[]
    for(i=0;i<N;i++)
    arr1.push(i)
    for(j=0;j<M;j++)
    arr2.push(j)
 }
Space complexity=C0+C1+C2*N+C3*M
applying Big O=O(C0+C1+C2*N+C3*M)
              =O(N+M)

* Check for sum of pairs is equal to 'k'.
   function checkpairsum(arr,k){
    for(let i=0;i<arr.length;i++)
    {
        for(let j=i+1;j<arr.length;j++)
        {
           if(arr[i]+arr[j]==k)
           return true;
        }
        
    }
    return false
}

let arr=[1,2,3,4,5,6]
console.log(checkpairsum(arr,8));//output:8
=>Time complexity:O(N^2)

* Cummulative Array:
  It can be defined as :
  let arr=[2,4,-2,3,5,6]
  cumarr=[2,6,4,7,12,18]

=>  cumarr= arr[i]+cumarr[i-1], i>0
            arr[0], i=0

* How to calculate cummulative array.
  function calccumArr(arr){
    let cumArr=[];
    cumArr.push(arr[0]);
    for(i=1;i<arr.length;i++){
        cumArr.push(cumArr[i-1]+arr[i])
    }
    return cumArr;
}
let arr=[5,7,-2,3,0,1]
console.log(calccumArr(arr))//output:[ 5, 12, 10, 13, 13, 14 ]